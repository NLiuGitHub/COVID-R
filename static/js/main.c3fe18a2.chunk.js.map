{"version":3,"sources":["components/Disclosure.js","components/Heading.js","components/ProgessBar.js","components/InputCard.js","components/Results.js","components/Developers.js","components/FAQ.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Disclosure","class","type","onClick","this","props","React","Component","Heading","ProgressBar","bgcolor","completed","fillerStyles","height","width","backgroundColor","borderRadius","textAlign","transition","style","InputCard","state","selectValue","textValue","selectedIndex","id","val","parseFloat","setResponse","setState","e","target","value","isNaN","deleteResponse","stepForward","textField","selectField","PB","Math","ceil","step","source","length","toPrecision","options","selectOptions","index","push","setSelectionInput","bind","inputDescription","modeSetLocation","advancedMode","selectDescription","onChange","setTextInput","for","inputUnit","sectionTitle","stepBackward","Results","Age","data","riskScore","classifiedRisk","calculatedRiskScore","RaceAA","RaceEA","EthnicityHispanic","Smoker","RiskCloseContact","RiskOtherExposure","Temperature","Fever","HistoryOfFever","LossOfTasteSmell","MuscleAche","SoreThroat","CoughWithoutSputum","Wheezing","Cancer","COPD","Asthma","OtherLungDisease","SystolicBloodPressure","HighBloodPressure","beta","moreThan","moreThanAndInfected","closeAndInfected","shouldStop","after","round","responses","binaryChoice","console","log","require","pow","E","binnedData","binCount","currBin","i","splice","closeAndInfectedSum","className","ResponsiveContainer","ComposedChart","margin","top","right","bottom","left","XAxis","dataKey","YAxis","Tooltip","Legend","CartesianGrid","stroke","Bar","barSize","fill","ReferenceLine","x","strokeWidth","label","restartAssessment","Developers","FAQ","Footer","href","App","userInfoID","newResponses","response","AppContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3fe18a2.chunk.js","sourcesContent":["import React from 'react';\n\nclass Disclosure extends React.Component {\n\n    render() {\n        return (\n            <div class=\"card m-md-5 p-3\">\n                <h1 class=\"text-center m-3\">COVID-R Disclosure</h1>\n                <hr class=\"m-0\"/>\n                <p class= \"m-lg-5 p-3\">COVID-R is based on statistical models and provides a rough estimate of your risk for COVID-19. The information and content provided by this tool are not intended to replace advice from medical doctors or other health professionals, and shall not be used for the diagnosis or treatment of any medical condition, or for any medical or clinical decision-making. You shall not use the information to substitute for any activity, such as visit or consultation, with your healthcare provider. In no circumstance shall the authors and their affiliates be liable or responsible for any consequences involving the COVID-R app, including but not limited to, loss or injury of any kind. We do not save any information that you provide when using the tool, and information is disposed once you exit this app.</p>\n                <button type=\"button\" class=\"btn btn-primary\" onClick={this.props.onClick}>Accept &amp; Continue</button>\n            </div>\n        );\n    }\n}\n\nexport default Disclosure;\n","import React from 'react';\n\nclass Heading extends React.Component {\n  render() {\n    return (\n      <nav class=\"navbar navbar-expand-lg navbar-light navbar-background-custom px-5\">\n          <span class=\"navbar-brand\">COVID-R</span>\n      </nav>\n    );\n  }  \n}\n\nexport default Heading;\n","import React from \"react\";\n\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    height: 20,\n    width: \"100%\",\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 50,\n  };\n\n  const fillerStyles = {\n    height: \"100%\",\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: \"inherit\",\n    textAlign: \"right\",\n    transition: 'width 1s ease-in-out',\n  };\n\n  // const labelStyles = {\n  //   padding: 5,\n  //   color: \"white\",\n  //   fontWeight: \"bold\",\n  //   lineHeight: 0,\n  // };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        {/* <span style={labelStyles}>{`${completed}%`}</span> */}\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;","import React from 'react';\nimport ProgressBar from './ProgessBar';\n\nclass InputCard extends React.Component {\n\n    constructor (props) {\n        super(props)\n        this.state = {selectValue: '', textValue: '', selectedIndex: -1}\n    }\n\n    setSelectionInput(id) {\n        const val = parseFloat(id)\n        this.props.setResponse(val, 1);\n        this.setState(() => {\n            return {selectValue: id, textValue: '', selectedIndex: val}\n        })\n    }\n\n    setTextInput (e) {\n        const val = parseFloat(e.target.value)\n        if (!isNaN(val)) {\n            this.props.setResponse(val, 0);\n        } else {\n            this.props.deleteResponse();\n        }\n        this.setState(() => {\n            return {textValue: e.target.value, selectedIndex: -1}\n        })\n    }\n\n    stepForward () {\n        this.setState({selectValue: '', textValue: '', selectedIndex: -1})\n        this.props.stepForward();\n    }\n\n    render() {\n\n        const PB = <ProgressBar bgcolor={\"#00695c\"} completed={Math.ceil((this.props.state.step / this.props.state.source.length).toPrecision(4) * 100)}/>\n\n        const options = [];\n        var textField;\n        var selectField;\n\n        if (this.props.state.source[this.props.state.step].selectOptions) {\n            for (let index = 0; index < this.props.state.source[this.props.state.step].selectOptions.length; index++) {\n                options.push(<button type=\"button\" class={index === this.state.selectedIndex ? \"btn btn-dark my-1 active\" : \"btn btn-light my-1\"} id={index} onClick={this.setSelectionInput.bind(this, index)}>\n                    {this.props.state.source[this.props.state.step].selectOptions[index]}\n                </button>)\n            }\n        }\n\n        if (this.props.state.source[this.props.state.step].inputDescription && (this.props.state.modeSetLocation === -1 || this.props.state.advancedMode === 0 || !this.props.state.source[this.props.state.step].selectDescription || this.props.state.step === this.props.state.modeSetLocation)) {\n            textField = <div class=\"row\">\n                <div class=\"col-md-8\">\n                    <p class=\"\">\n                        {this.props.state.source[this.props.state.step].inputDescription}\n                    </p>\n                </div>\n                <div class=\"col-md-4\">\n                    <input style={{width:\"100%\"}} id=\"textInput\" onChange={this.setTextInput.bind(this)} value={this.state.textValue}></input>\n                    <label class=\"mx-1 visually-hidden\" for=\"textInput\">{this.props.state.source[this.props.state.step].inputUnit}</label>\n                </div>\n            </div>\n        }\n\n        if (this.props.state.source[this.props.state.step].selectDescription && (this.props.state.modeSetLocation === -1 || this.props.state.advancedMode === 1 || !this.props.state.source[this.props.state.step].inputDescription || this.props.state.step === this.props.state.modeSetLocation)) {\n            selectField = <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <p class=\"\">\n                        {this.props.state.source[this.props.state.step].selectDescription}\n                    </p>\n                </div>\n                {options}\n            </div>\n        }\n\n        return (\n            <div class=\"card mx-md-5 my-3\">\n                <h1 class=\"text-center m-3\">\n                    COVID Risk Assessment Tool\n                </h1>\n                <hr class=\"m-0\"/>\n                <p class=\"text-center my-md-3 font-weight-bold\">\n                    {this.props.state.source[this.props.state.step].sectionTitle}\n                </p>\n                <form class=\"mx-md-5 mx-3 my-md-5\">\n                    {textField}\n                    {selectField}\n                </form>\n                <div class=\"row my-4 p-3 text-center\">\n                    <div class=\"col-md-6 my-1\">\n                        <button class=\"btn btn-secondary custom-nav-button\" onClick={this.props.stepBackward}>Back</button>\n                    </div>\n                    <div class=\"col-md-6 my-1\">\n                        <button class=\"btn btn-primary custom-nav-button\" onClick={this.stepForward.bind(this)}>Continue</button>\n                    </div>\n                </div>\n                <div class=\"mx-5 mb-4\">\n                    {PB}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default InputCard;\n","import React from 'react';\nimport { ResponsiveContainer, ComposedChart, Bar, XAxis, YAxis, Tooltip, Legend, CartesianGrid, ReferenceLine } from 'recharts';\n\nclass Results extends React.Component {\n\n    render() {\n        var Age = 0\n        var RaceAA = 0\n        var RaceEA = 0\n        var EthnicityHispanic = 0\n        var Smoker = 0\n        var RiskCloseContact = 0\n        var RiskOtherExposure = 0\n        var Temperature = 0\n        var Fever = 0\n        var HistoryOfFever = 0\n        var LossOfTasteSmell = 0\n        var MuscleAche = 0\n        var SoreThroat = 0\n        var CoughWithoutSputum = 0\n        var Wheezing = 0\n        var Cancer = 0\n        var COPD = 0\n        var Asthma = 0\n        var OtherLungDisease = 0\n        var SystolicBloodPressure = 0\n        var HighBloodPressure = 0\n        var data\n        var beta = 0\n        var riskScore, classifiedRisk, calculatedRiskScore\n        var moreThan = 0\n        var moreThanAndInfected = 0\n        var closeAndInfected = []\n        var shouldStop = false\n        var after = 0\n\n        // Set Age\n        Age = Math.round(this.props.responses[\"age\"])\n        \n        // Set Race\n        if (this.props.responses[\"race\"] === 2.0) {\n            RaceAA = 1.0\n        } else if (this.props.responses[\"race\"] === 4.0) {\n            RaceEA = 1.0\n        }\n        \n        // Set Ethnicity\n        if (this.props.responses[\"ethnicity\"] === 0) {\n            EthnicityHispanic = 1.0\n        }\n        \n        // Set Smoker\n        if (this.props.responses[\"isSmoker\"] === 0) {\n            Smoker = 1.0\n        }\n        \n        // Set Close Contact\n        if (this.props.responses[\"householdOrInstituitionalRisk\"] === 0) {\n            RiskCloseContact = 1.0\n        }\n        \n        // Set Other Risk\n        if (this.props.responses[\"otherRisk\"] === 0.0) {\n            RiskOtherExposure = 1.0\n        }\n        \n        // Set Temperature or Fever\n        if (this.props.responses[\"temperature\"] === 0.0) {\n            Fever = 1.0\n        } else if (this.props.responses[\"temperature\"] > 1.0) {\n            Temperature = (this.props.responses[\"temperature\"] - 32) * (5/9)\n        }\n        \n        // Set History of Fever\n        if (this.props.responses[\"historicalFever\"] === 0.0) {\n            HistoryOfFever = 1.0\n        }\n        \n        // Set Lost Taste or Smell\n        if (this.props.responses[\"lostTasteOrSmell\"] === 0.0) {\n            LossOfTasteSmell = 1.0\n        }\n        \n        // Set Muscle Aches\n        if (this.props.responses[\"hasMuscleAches\"] === 0.0) {\n            MuscleAche = 1.0\n        }\n        \n        // Set Sore Throat\n        if (this.props.responses[\"hasSoreThroat\"] === 0.0) {\n            SoreThroat = 1.0\n        }\n        \n        // Set Cough Without Sputum\n        if (this.props.responses[\"hasCoughWithoutSputum\"] === 0.0) {\n            CoughWithoutSputum = 1.0\n        }\n        \n        // Set Wheezing\n        if (this.props.responses[\"isWheezing\"] === 0.0) {\n            Wheezing = 1.0\n        }\n        \n        // Set Cancer\n        if (this.props.responses[\"hasCancer\"] === 0.0) {\n            Cancer = 1.0\n        }\n        \n        // Set COPD\n        if (this.props.responses[\"hasCOPD\"] === 0.0) {\n            COPD = 1.0\n        }\n        \n        // Set Asthma\n        if (this.props.responses[\"hasAsthma\"] === 0.0) {\n            Asthma = 1.0\n        }\n        \n        // Set Other Lung Disease\n        if (this.props.responses[\"hasOtherLungDisease\"] === 0.0) {\n            OtherLungDisease = 1.0\n        }\n        \n        // Set High Blood Pressure and Systolic Blood Pressure\n        if (this.props.responses[\"systolicBloodPressure\"] === 0.0) {\n            HighBloodPressure = 1.0\n        } else if (this.props.responses[\"systolicBloodPressure\"] > 1.0) {\n            SystolicBloodPressure = this.props.responses[\"systolicBloodPressure\"]\n        }\n\n        if (this.props.binaryChoice) {\n            console.log(\"Categorical Path\")\n            beta = -2.7846\n            beta += 1.1607*RiskCloseContact\n            beta += 0.4858*RiskOtherExposure\n            beta += 0.9167*RaceAA\n            beta -= 0.3614*RaceEA\n            beta += 1.3163*EthnicityHispanic\n            beta += 0.0241*Age\n            beta -= 0.5087*SoreThroat\n            beta += 0.4130*CoughWithoutSputum\n            beta -= 0.6115*Wheezing\n            beta += 0.5070*HistoryOfFever\n            beta += 0.4570*MuscleAche\n            beta += 1.9577*LossOfTasteSmell\n            beta -= 0.8304*Smoker\n            beta -= 0.7691*Cancer\n            beta -= 0.3069*COPD\n            beta -= 0.3568*Asthma\n            beta -= 0.6334*OtherLungDisease\n            beta += 0.8676*Fever\n            beta -= 0.2680*HighBloodPressure\n            data = require(\"../data/simulated_pop.cat10000_predicted.json\")\n        } else {\n            console.log(\"Continuous Path\")\n            beta = -21.8613\n            beta += 1.1686*RiskCloseContact\n            beta += 0.4684*RiskOtherExposure\n            beta += 0.9016*RaceAA\n            beta -= 0.3568*RaceEA\n            beta += 1.3142*EthnicityHispanic\n            beta += 0.0251*Age\n            beta -= 0.4822*SoreThroat\n            beta += 0.4137*CoughWithoutSputum\n            beta -= 0.6106*Wheezing\n            beta += 0.3723*HistoryOfFever\n            beta += 0.4417*MuscleAche\n            beta += 1.9584*LossOfTasteSmell\n            beta += 0.5386*Temperature\n            beta -= 0.00671*SystolicBloodPressure\n            beta -= 0.7839*Smoker\n            beta -= 0.7902*Cancer\n            beta -= 0.3085*COPD\n            beta -= 0.3445*Asthma\n            beta -= 0.6586*OtherLungDisease\n            data = require(\"../data/simulated_pop10000_predicted.json\")\n        }\n\n        riskScore = 100 * (Math.pow(Math.E,beta)/(1 + Math.pow(Math.E, beta)))\n\n        calculatedRiskScore = Math.round(riskScore * 100)/100\n\n        if (calculatedRiskScore <= 5) {\n            classifiedRisk = \"very low\"\n        } else if (calculatedRiskScore <= 28) {\n            classifiedRisk = \"low\"\n        } else if (calculatedRiskScore <= 44) {\n            classifiedRisk = \"moderate\"\n        } else if (calculatedRiskScore <= 66) {\n            classifiedRisk = \"relatively high\"\n        } else if (calculatedRiskScore <= 90) {\n            classifiedRisk = \"high\"\n        } else {\n            classifiedRisk = \"very high\"\n        }\n\n        // Setup Binning\n        var binnedData = []\n        var binCount = 0\n        const binStep = 0.01\n        var currBin = 1\n\n        for (let i = 0; i < data.length; i++) {\n            if (data[i][0] >= currBin && data[i][1] === 1) {\n                binCount += 1\n            } else if (data[i][0] < currBin) {\n                binnedData.push({\"index\": currBin.toPrecision(2), \"infected\": binCount})\n                currBin -= binStep\n                binCount = 0\n            }\n\n            if (data[i][0] > riskScore / 100) {\n                moreThan += 1\n                if (data[i][1] === 1) {\n                    moreThanAndInfected += 1\n                }\n            }\n\n            if (!shouldStop) {\n                closeAndInfected.push(data[i][1])\n                if (closeAndInfected.length > 100) {\n                    closeAndInfected.splice(0,1)\n                }\n                if (data[i][0] < riskScore / 100) {\n                    after += 1\n                }\n                if (closeAndInfected.length === 100 && after >= 50) {\n                    shouldStop = true\n                }\n            }\n        }\n\n        var closeAndInfectedSum = 0\n        for (let i = 0; i < closeAndInfected.length; i++) {\n            closeAndInfectedSum += closeAndInfected[i]\n        }\n\n        return (\n            <div class=\"card m-md-5\">\n                <h1 class=\"text-center m-3\">COVID-R Assessment Results</h1>\n                <hr class=\"m-0\"/>\n                <div class=\"m-3 p-3\">\n                    <p>\n                        Your computed Risk Score was {calculatedRiskScore} out of 100. Your probability of COVID-19 infection is {classifiedRisk}.\n                    </p>\n                    <p>\n                        For your reference, in the general US population, \n                        about 11% people have been or are currently infected \n                        with COVID-19. The median risk score for the infected \n                        is 53.0; the median risk score for the uninfected is \n                        19.4. In the general US population, {moreThan} people \n                        out of 10,000 have a risk score the same \n                        as or higher than your score, and {moreThanAndInfected} of\n                        them are infected with COVID-19. In the general \n                        US population, out of 100 people with similar risk \n                        scores as yours, {closeAndInfectedSum} are infected with COVID-19. \n                        Please note that there are people infected with \n                        COVID-19 without symptoms. Even if you have a \n                        low computed risk score, please contact your \n                        healthcare provider immediately if you have any doubts.\n                    </p>\n                    <p>\n                        Illustrated below is the risk score and the associated number\n                        of people projected to be infected in the US. Your risk score is\n                        represented by the red line for your reference.\n                    </p>\n                </div>\n                <div className=\"line-chart-wrapper mx-4\" style={{height: '400px'}}>\n                    <ResponsiveContainer>\n                        <ComposedChart\n                            data={binnedData}\n                            margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n                        >\n                            <XAxis dataKey=\"index\" type=\"number\"/>\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <CartesianGrid stroke=\"#f5f5f5\" />\n                            <Bar dataKey=\"infected\" barSize={10} fill=\"#413ea0\" />\n                            <ReferenceLine x={riskScore/100} stroke=\"red\" strokeWidth=\"3\" label=\"\"/>\n                        </ComposedChart>\n                    </ResponsiveContainer>\n                </div>\n                <button type=\"button\" class=\"btn btn-primary\" onClick={this.props.restartAssessment}>Restart Assessment</button>\n            </div>\n        );\n    }\n}\n\nexport default Results;\n","import React from 'react';\n\nclass Developers extends React.Component {\n  render() {\n    return (\n      <div class=\"text-center my-4\">\n        <h4>Developers</h4>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <p>Rob Hageboeck<br/>Indiana University</p>\n          </div>\n          <div class=\"col-md-4\">\n            <p>Daniel Liu<br/>Park Tudor School</p>\n          </div>\n          <div class=\"col-md-4\">\n            <p>Nianjun Liu<br/>Indiana University</p>\n          </div>\n        </div>\n      </div>\n    );\n  }  \n}\n\nexport default Developers;\n","import React from \"react\";\n\nclass FAQ extends React.Component {\n  render () {\n    return (\n      <div>\n        <h2>\n          FAQs\n        </h2>\n        <hr/>\n        <div>\n          <div>\n            <h3>What if I don’t know my temperature?</h3>\n            <p>For your temperature, you can either provide a numeric value of your temperature (in Fahrenheit) or, if you don’t know your temperature, you can tell COVID-R whether or not you currently have a fever. Please note, if you enter your numeric temperature, you will need to enter your numeric blood pressure value later; if you choose to proceed with the second option, later you will be asked whether or not you have high blood pressure.</p>\n          </div>\n          <div>\n            <h3>Do males and females have the same risk of COVID-19?</h3>\n            <p>According to our analysis, biological sex is a risk factor of COVID-19. In order to minimize the burden of the users, we only include the most significant risk factors in COVID-R. That's the reason we did not include biological sex in COVID-R. </p>\n          </div>\n          <div>\n            <h3>I heard that blood type is a risk factor of COVID-19. Why does COVID-R not include it?</h3>\n            <p>Blood type is truly a risk factor of COVID-19 from our analysis. However, the purpose of COVID-R is for people to use at home, without having medical tests. A lot of people may not know their blood types. Another example is oxygen saturation, which is an important predictor of COVID-19. But we did not implement it in COVID-R, because many people don’t have the measure.</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default FAQ;","import React from 'react';\nimport Developers from './Developers';\nimport FAQ from './FAQ';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <div class=\"footer-background-custom py-4\">\n        <div class=\"container-fluid\">\n          <div>\n            <h3>\n              How can we help?\n            </h3>\n            <p>\n              Have some coronavirus symptoms? Worry about whether it is simply a cold, or COVID-19? Many people may have this kind of struggle during the pandemic, which puts a lot of pressure on people worldwide. Using machine learning algorithms, COVID-R is a simple tool that estimates the possibility of contracting COVID-19 based on a few survey questions, without the need of medical tests. The use of COVID-R is simple and straightforward. Simply answer the questions and get the results. Here we provide answers to some frequently asked questions about the app. If you do not find the answers to your questions here, or have comments and/or suggestions, please feel free to contact us via email at: <a href=\"mailto:liunian@indiana.edu\">liunian@indiana.edu</a>\n            </p>\n          </div>\n          <FAQ></FAQ>\n          <Developers></Developers>\n          <div class=\"text-center\">\n            <p>&copy; 2021</p>\n          </div>\n        </div>\n      </div>\n    );\n  }  \n}\n\nexport default Footer;\n","import React from 'react';\nimport Disclosure from './components/Disclosure';\nimport Heading from './components/Heading'\nimport InputCard from './components/InputCard';\nimport Results from './components/Results';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {step: -1, advancedMode: -1, modeSetLocation: -1, responses: {}, source: require(\"./data/source.json\")};\n  }\n\n  stepForward = () => {\n    this.setState(state => {\n      if (state.step === -1 || state.source[state.step].userInfoID in state.responses) {\n        if (state.advancedMode > -1 && (state.modeSetLocation === -1 || state.modeSetLocation === state.step)) {\n          return {step: state.step + 1, modeSetLocation: state.step}\n        }\n        return {step: state.step + 1}\n      }\n    })\n  }\n\n  stepBackward = () => {\n    this.setState(state => {\n      var newResponses = state.responses\n      delete newResponses[state.source[state.step].userInfoID]\n      if (state.step === state.modeSetLocation) {\n        return {step: state.step - 1, responses: newResponses, modeSetLocation: -1, advancedMode: -1} \n      }\n      return {step: state.step - 1, responses: newResponses}\n    })\n  }\n\n  setResponse = (response, type) => {\n    this.setState(state => {\n      var newResponses = state.responses\n      newResponses[state.source[state.step].userInfoID] = response\n      if (state.source[state.step].inputDescription && state.source[state.step].selectDescription && (state.modeSetLocation === -1 || state.modeSetLocation === state.step)) {\n        return {responses: newResponses, advancedMode: type}\n      }\n      return {responses: newResponses}\n    })\n  }\n\n  deleteResponse = () => {\n    this.setState(state => {\n      var newResponses = state.responses\n      delete newResponses[state.source[state.step].userInfoID]\n      return {responses: newResponses}\n    })\n  }\n\n  restartAssessment = () => {\n    this.setState(state => {\n      return {step: -1, advancedMode: -1, modeSetLocation: -1, responses: {}}\n    })\n  }\n\n  render() {\n    console.log(this.state.responses)\n    // console.log(this.state.modeSetLocation + \" \" +this.state.advancedMode)\n    let AppContent;\n    console.log(this.state.step);\n    if (this.state.step === -1) {\n      AppContent = <Disclosure onClick={this.stepForward.bind(this)}></Disclosure>\n    } else if (this.state.step === this.state.source.length) {\n      AppContent = <Results restartAssessment={this.restartAssessment.bind(this)} binaryChoice={this.state.advancedMode === 1 ? true : false} responses={this.state.responses}></Results>\n    } else {\n      AppContent = <InputCard setResponse={this.setResponse.bind(this)} deleteResponse={this.deleteResponse.bind(this)} stepForward={this.stepForward.bind(this)} stepBackward={this.stepBackward.bind(this)} state={this.state}></InputCard>;\n    }\n    return (\n      <body>\n        <Heading></Heading>\n        <div class=\"container\">\n          <div class=\"mx-md-5 p-md-5\">\n            {AppContent}\n          </div>\n        </div>\n        <Footer></Footer>\n      </body>\n    );\n  }  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// App Files\nimport App from './App';\n\n// CSS\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}